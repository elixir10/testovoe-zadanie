import sqlite3 from "sqlite3";
import { open } from "sqlite";
import * as Utils from '../utils.js';

const db = await open({
    filename: "database/db.sqlite",
    driver: sqlite3.Database
});

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–Ω–∏–≥–µ
 * @param { number } id –ê–π–¥–∏ –∫–Ω–∏–≥–∏
 * @returns { Promise<{
 *     id: number,
 *     name: string,
 *     author: string,
 *     description: string
 *     genre: string
 * } | null> } –ö–Ω–∏–≥–∞
 */
export const getBook = async id => {
    return await db.get(`SELECT * FROM books WHERE id = ${id}`);
}

/**
 * –£–¥–∞–ª—è–µ—Ç –∫–Ω–∏–≥—É
 * @param { number } id –ê–π–¥–∏ –∫–Ω–∏–∂–µ—á–∫–∏ üìñüìñüìñ
 * @returns { Promise<void> }
*/
export const deleteBook = async id => {
   await db.run(`DELETE FROM books WHERE id = ${id}`);
}

/**
 * –í—ã–¥–∞–µ—Ç –≤—Å–µ –∫–Ω–∏–≥–∏/–∫–Ω–∏–≥–∏ –ø–æ–¥ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º –∂–∞–Ω—Ä–æ–º
 * @param { string | undefined } genre –î–ª—è –≤—ã–¥–∞—á–∏ –∫–Ω–∏–≥ –ø–æ–¥ –æ–ø—Ä–µ–¥–µ–ª–Ω–Ω—ã–º –∂–∞–Ω—Ä–æ–º
 * @returns { Promise<{
 *     id: number,
 *     name: string,
 *     author: string,
 *     description: string
 *     genre: string
 * }[]> } –ú–∞—Å—Å–∏–≤ –∫–Ω–∏–≥
 */
export const getAll = async genre => {
    if(genre) {
        return await db.all(`
            SELECT * FROM books WHERE genre = "${genre}";
        `);
    }

    return await db.all(`SELECT * FROM books;`);
}

/**
 * –í—ã–¥–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–Ω–∏–≥–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É
 * @param { string } query –ó–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞
 * @returns { Promise<{
 *     id: number,
 *     name: string,
 *     author: string,
 *     description: string
 *     genre: string
 * }[]> } –ú–∞—Å—Å–∏–≤ –∫–Ω–∏–≥
 */
export const find = async query => {
    return await db.all(`
        SELECT * FROM books WHERE name LIKE "%${query}%" OR author LIKE "%${query}%";
    `);
}

/**
 * –ü–æ–ª—É—á–∞–µ—Ç –∂–∞–Ω—Ä—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ —Ä–∞–Ω–µ–µ
 * @returns { Promise<string[]> } –°–ø–∏—Å–æ–∫ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∂–∞–Ω—Ä–æ–≤
 */
export const getGenres = async () => {
    return Utils.removeRepeats(
        (await db.all('SELECT genre FROM books'))
            .map(({ genre }) => genre)
    );
}

/**
 * –°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –∫–Ω–∏–≥—É
 * @param { {
 *     name: string,
 *     author: string,
 *     description: string
 *     genre: string
 * } } book –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–∏–≥–∏
 * @returns { Promise<void> }
 */
export const addBook = async book => {
    const { name, author, genre, description } = book;

    await db.run(
        `INSERT INTO books(name, author, description, genre, id) VALUES ('${name}', '${author}', '${description}','${genre}', ${Date.now()});`
    );
}